name: Build and Distribute

on:
  push:
    branches:
      - main

jobs:
  build:
    name: build
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '3.27.3'
    
      - name: Setup Flutter Environment
        run: |
          flutter clean
          flutter pub get 
      
      # 清除 Xcode 缓存
      - name: Clean Xcode Cache
        run: |
          rm -rf ~/Library/Developer/Xcode/DerivedData
          rm -rf ~/Library/Developer/Xcode/iOS\ DeviceSupport
          rm -rf ~/Library/Developer/Xcode/Archives
          rm -rf ~/Library/Developer/Xcode/Products
          
      # 添加 Xcode 版本选择
      - name: Select Xcode 16.2
        run: sudo xcode-select -s /Applications/Xcode_16.2.app
        
      # 设置 CocoaPods
      # - name: Setup CocoaPods
      #   run: |
      #     cd ios
      #     rm -rf Pods
      #     rm -f Podfile.lock
      #     pod install --repo-update
          
      # 添加详细的环境信息调试步骤
      - name: Print Environment Info
        run: |
          echo "============= Environment Variables ============="
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          FLUTTER_ROOT=$(which flutter | xargs dirname | xargs dirname)
          echo "FLUTTER_ROOT: $FLUTTER_ROOT"
          echo "FLUTTER_APPLICATION_PATH: $GITHUB_WORKSPACE"
          echo "Current Directory: $(pwd)"


      - uses: cedvdb/action-flutter-build-ios@v1
        with:
          build-cmd: |
            flutter build ipa --release --export-options-plist=ios/ExportOptions.plist --no-tree-shake-icons
          certificate-base64: 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


          certificate-password: 111111
          
          provisioning-profile-base64: 

          keychain-password: 111111

      # # 添加检查步骤
      - name: 检查构建文件
        run: |
          echo "检查 build/ios/ipa 目录内容："
          ls -la build/ios/ipa/
          echo "检查 build/ios 目录内容："
          ls -la build/ios/

      - name: Archive IPA
        uses: actions/upload-artifact@v4
        with:
          name: release-ipa
          path: build/ios/ipa


      - name: Upload to App Store using altool
        env:
          IPA_PATH: "build/ios/ipa/zalla.ipa"
          APPLE_ID: "chenguangdong@hengtechinternationaltra.biz"
          APP_SPECIFIC_PASSWORD: "oqae-pxop-rofs-uzbh"
        run: |
          xcrun altool --upload-app -f "$IPA_PATH" \
            -t ios \
            -u "$APPLE_ID" \
            -p "$APP_SPECIFIC_PASSWORD" \
            --verbose
